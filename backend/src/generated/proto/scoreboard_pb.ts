// @generated by protoc-gen-es v1.4.0 with parameter "target=ts"
// @generated from file proto/scoreboard.proto (package scoreboard.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message scoreboard.v1.SubscribeScoresRequest
 */
export class SubscribeScoresRequest extends Message<SubscribeScoresRequest> {
  /**
   * @generated from field: string game_id = 1;
   */
  gameId = "";

  constructor(data?: PartialMessage<SubscribeScoresRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scoreboard.v1.SubscribeScoresRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "game_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SubscribeScoresRequest {
    return new SubscribeScoresRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SubscribeScoresRequest {
    return new SubscribeScoresRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SubscribeScoresRequest {
    return new SubscribeScoresRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SubscribeScoresRequest | PlainMessage<SubscribeScoresRequest> | undefined, b: SubscribeScoresRequest | PlainMessage<SubscribeScoresRequest> | undefined): boolean {
    return proto3.util.equals(SubscribeScoresRequest, a, b);
  }
}

/**
 * @generated from message scoreboard.v1.ScoreUpdate
 */
export class ScoreUpdate extends Message<ScoreUpdate> {
  /**
   * @generated from field: string game_id = 1;
   */
  gameId = "";

  /**
   * @generated from field: string team_home = 2;
   */
  teamHome = "";

  /**
   * @generated from field: string team_away = 3;
   */
  teamAway = "";

  /**
   * @generated from field: uint32 score_home = 4;
   */
  scoreHome = 0;

  /**
   * @generated from field: uint32 score_away = 5;
   */
  scoreAway = 0;

  /**
   * "1Q", "2Q", "HALF", "3Q", "4Q", "FINAL"
   *
   * @generated from field: string status = 6;
   */
  status = "";

  constructor(data?: PartialMessage<ScoreUpdate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scoreboard.v1.ScoreUpdate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "game_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "team_home", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "team_away", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "score_home", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "score_away", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ScoreUpdate {
    return new ScoreUpdate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ScoreUpdate {
    return new ScoreUpdate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ScoreUpdate {
    return new ScoreUpdate().fromJsonString(jsonString, options);
  }

  static equals(a: ScoreUpdate | PlainMessage<ScoreUpdate> | undefined, b: ScoreUpdate | PlainMessage<ScoreUpdate> | undefined): boolean {
    return proto3.util.equals(ScoreUpdate, a, b);
  }
}

